package templates;

import "web/messages"
import "net/http"
import "web/redis_cache"
import "github.com/google/uuid"
import "fmt"

templ orderStatusContent(info *messages.OrderStatusInfo) {
	<div 
	hx-get={getApiRequestPath(info)}
	hx-trigger="every 5s">
		@OrderStatus(*info)
	</div>
}

templ OrderStatusPage(info *messages.OrderStatusInfo) {
	@Wrapper() {
		@orderStatusContent(info) 
	}
}

func getApiRequestPath(info *messages.OrderStatusInfo) string {
	return fmt.Sprintf("/api/orders/%s", info.Id)
}

func HandleOrderStatus(w http.ResponseWriter, req *http.Request) {
	id := req.PathValue("id")
	if id == "" { 
		http.Error(w, "No valid uuid was provided", http.StatusNotFound)
		return
	}
	orderId, err := uuid.Parse(id);
	if err != nil { 
		http.Error(w, "No valid uuid was provided", http.StatusNotFound)
		return
	}
	fmt.Printf("Parsed uuid: %s", orderId.String())
	info, err := rediscache.GetOrderInfo(orderId);
	if err != nil {
		http.Error(w, err.Error(), http.StatusNotFound)
		return
	}
	OrderStatusPage(&info).Render(req.Context(), w);
}
